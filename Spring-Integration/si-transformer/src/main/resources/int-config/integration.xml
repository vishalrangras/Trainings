<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file= "http://www.springframework.org/schema/integration/file"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
		http://www.springframework.org/schema/integration/xml http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		">
	
	<!-- Scans within the base package of the application for @Components to 
		configure as beans -->
	<context:component-scan base-package="com.cd.spring" />
	
	
	<!-- Adapter for reading stdin stream -->
	<!-- message producer / a Spring Integration wrapped Java Standard input 
		stream -->
	<int-stream:stdin-channel-adapter id="producer-stream-adapter"
		channel="inboundChannel" />
		
		
	<!-- a direct inbound channel -->
	<int:channel id="inboundChannel" />
	
	<!-- SI Transformer with Spring Expression, converts an inbound message string
		 to a reverse string. -->
	<!-- <int:transformer input-channel="inboundChannel" 
	output-channel="outboundChannel" 
	expression="new StringBuilder(payload).reverse().toString().toUpperCase()" /> -->
	
	<int:transformer input-channel="inboundChannel" 
		output-channel="outboundChannel" ref="pigLatinTransformer" />
	
	
	<!-- a direct outbound channel -->
	<int:channel id="outboundChannel" />


	<!-- Adapter for writing files of outbound channel-->
	<int-stream:stdout-channel-adapter
		id="consumer-stream-adapter" channel="outboundChannel" append-newline="true" />


	<int:poller id="defaultPoller" default="true"
		max-messages-per-poll="5" fixed-rate="200" />

</beans>